apiVersion: devops.alauda.io/v1alpha1
kind: PipelineTemplate
metadata:
  name: JZGolangBuild
  namespace: default
  annotations:
    alauda.io/displayName.zh-CN: "JZ Golang 构建并部署"
    alauda.io/displayName.en: "aaaGolang Build & Deploy Application"
    alauda.io/description.zh-CN: "aaa克隆代码 -> Golang 构建 -> Docker 构建 -> 部署应用"
    alauda.io/description.en: "aaaClone -> Golang Build -> Docker Build -> Deploy Application"
    alauda.io/version: "1.1.00"
    alauda.io/style.icon: golang
  labels:
    category: Build
spec:
  engine: graph
  withSCM: true
  agent:
    label: golang
  raw: |-
      {
        kubernetes {
                  label 'mypod'
                  defaultContainer 'jnlp'
                  yaml """
            apiVersion: v1
            kind: Pod
            metadata:
              labels:
                some-label: some-label-value
            spec:
              containers:
              - name: busybox
                image: busybox
                command:
                - cat
                tty: true
            """
                }
      }
  stages:
    - name: Clone
      tasks:
        - name: clone
          kind: ClusterPipelineTemplate
          type: public/clone
    - name: "Golang Build"
      tasks:
        - name: golang
          kind: ClusterPipelineTemplate
          type: public/golang
    - name: "Docker Build"
      tasks:
        - name: build-docker
          kind: ClusterPipelineTemplate
          type: public/build-docker
    - name: "DeployService"
      tasks:
        - name: deployService
          kind: ClusterPipelineTemplate
          type: public/deployService
  arguments:
    - displayName:
        zh-CN: "代码检出"
        en: "Clone"
      items:
        - name: "PlatformCodeRepository"
          schema:
            type: alauda.io/coderepositorymix
          required: true
          value: ""
          binding:
            - clone.args.PlatformCodeRepository
          display:
            type: alauda.io/coderepositorymix
            name:
              zh-CN: "代码仓库"
              en: Code Repository
            description:
              zh-CN: "选择已为项目分配的代码仓库"
              en: ""
        - name: "Branch"
          schema:
            type: string
          required: true
          default: "*/master"
          value: ""
          binding:
            - clone.args.Branch
          display:
            type: string
            advanced: true
            name:
              zh-CN: "分支"
              en: Branch
            description:
              zh-CN: "检出代码仓库中的分支。默认为：*/master"
              en: ""
        - name: "RelativeDirectory"
          schema:
            type: string
          required: true
          value: ""
          binding:
            - clone.args.RelativeDirectory
          default: "src"
          display:
            type: string
            advanced: false
            name:
              zh-CN: "相对目录"
              en: Relative Directory
            description:
              zh-CN: "在 Golang 程序为 GOPATH的子目录，例如 src/github.com/alauda/alauda。指定检出 Git 仓库的本地目录(相对于 workspace 根目录)。若为空，将使用 workspace 根目录"
              en: "Used as the path in GOPATH, e.g src/github.com/alauda/alauda. Specify a local directory (relative to the workspace root) where the Git repository will be checked out. If left empty, the workspace root itself will be used"
    - displayName:
        zh-CN: "Golang 构建"
        en: "Golang Build"
      items:
        - name: "buildCommand"
          schema:
            type: string
          binding:
            - golang.args.buildCommand
          display:
            type: string
            name:
              zh-CN: "构建命令"
              en: "Build Command"
            description:
              zh-CN: "自定义更详细的构建命令。默认为：go build"
              en: ""
          required: false
          value: ""
          default: 'go build'
    - displayName:
        zh-CN: "Docker 构建"
        en: "Docker Build"
      items:
        - name: "imageRepository"
          schema:
            type: alauda.io/dockerimagerepositorymix
          binding:
            - build-docker.args.imageRepository
            - deployService.args.imageRepositoryDeploy
          required: true
          value: ""
          display:
            type: alauda.io/dockerimagerepositorymix
            name:
              zh-CN: "镜像仓库"
              en: Repository
            description:
              zh-CN: "选择已为项目分配的镜像仓库或者输入地址"
              en: ""
        - name: "context"
          schema:
            type: string
          binding:
            - build-docker.args.context
          display:
            type: string
            advanced: true
            name:
              zh-CN: "构建上下文"
              en: "Build Context"
            description:
              zh-CN: "构建过程可以引用上下文中的任何文件。例如，构建中可以使用 COPY 命令在上下文中引用文件"
              en: "The build process can refer to any of the files in the context. For example, your build can use a COPY instruction to reference a file in the context"
          required: true
          value: ""
          default: '.'
        - name: "buildArguments"
          schema:
            type: string
          binding:
            - build-docker.args.buildArguments
          display:
            type: string
            advanced: true
            name:
              zh-CN: "构建参数"
              en: "Build Arguments"
            description:
              zh-CN: "自定义更多的构建参数，对镜像构建进行更详细的配置"
              en: ""
          required: false
          value: ""
          default: ''
        - name: "dockerfile"
          schema:
            type: string
          binding:
            - build-docker.args.dockerfile
          display:
            type: string
            advanced: true
            name:
              zh-CN: "Dockerfile"
              en: "Dockerfile"
            description:
              zh-CN: "Dockerfile 在代码仓库中的绝对路径"
              en: ""
          required: true
          value: ""
          default: 'Dockerfile'
        - name: "retry"
          schema:
            type: string
          binding:
            - build-docker.args.retry
          display:
            type: string
            advanced: true
            name:
              zh-CN: "重试次数"
              en: "Retry Times"
            description:
              zh-CN: "生成镜像时的失败重试次数"
              en: ""
          required: false
          value: ""
          default: '3'
    - displayName:
        zh-CN: "部署应用"
        en: "DeployService"
      items:
        - name: serviceName
          schema:
            type: string
          binding:
            - deployService.args.serviceName
          display:
            type: alauda.io/servicenamemix
            name:
              zh-CN: "应用名称"
              en: "Application Name"
            description:
              zh-CN: "需要部署的应用"
              en: ""
          required: true
          value: ""
        - name: containerName
          schema:
            type: string
          binding:
            - deployService.args.containerName
          display:
            type: alauda.io/containername
            name:
              zh-CN: "容器名称"
              en: "Container Name"
            description:
              zh-CN: "需要部署应用的容器"
              en: ""
            related: serviceName
          required: true
          value: ""
        - name: timeout
          schema:
            type: string
          binding:
            - deployService.args.timeout
          display:
            type: string
            advanced: true
            name:
              zh-CN: "超时时间（秒）"
              en: "Timeout (s)"
            description:
              zh-CN: "当前任务的执行时间若超过超时时间，则会中止任务，流水线变为失败状态"
              en: ""
          required: true
          default: '300'
          value: ""
